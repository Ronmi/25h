#!/usr/bin/zsh -f

# go environment
#
# DEFAULT VALUES
#
# GOPATH: $HOME/go
# GOROOT: $HOME/goroot
#
# MULTIPLE GO VERSION
#
# Put different version in $HOME/golang/name like $HOME/golang/1.9, $HOME/golang/tip
#
# You can use different verion by go1.9/gotip

if [[ -z $GOPATH ]]
then
    typeset -x GOPATH="${HOME}/go"
fi

export PATH="${GOPATH}/bin:${PATH}"
ln -sfT "${GOPATH}/bin" "${HOME}/bin/golang"

if [[ -d "${HOME}/golang" ]]
then
    for i in $(find ~/golang -mindepth 1 -maxdepth 1 -type d -exec basename {} ';')
    do
        alias "go${i}"="${HOME}/golang/${i}/bin/go"
    done
fi

function go {
    whence -p go >/dev/null 2>&1 && {
        unset -f go
        go "$@"
        return $?
    }

    (
        source "${HOME}/.zsh.d/lib/_lib.sh"
        _confirm "Go is not installed. Do you want to install it now?" || return 0

        echo -n "detecting cpu architecture ... "
        arch="$(case "$(uname -m)" in
x86_64)
  echo "amd64"
  ;;
aarch64)
  echo "arm64"
  ;;
*)
  echo "amd64"
  ;;
esac
)"
        echo $arch
        set -e
        echo -n "fetching go version ... "
        fn="$(curl -sSL https://go.dev/dl/ 2>/dev/null | grep -oE 'go[0-9]+\.[0-9]+\.[0-9]+\.linux-'"$arch"'\.tar\.gz'|head -n 1)"
        ver="$(echo "$fn" | cut -d o -f 2 | cut -d . -f 1-2)"
        echo "$ver"

        set +e
        rm -fr "${HOME}/golang/${ver}"

        echo "download into ${HOME}/golang/${ver}..."
        echo

        set -e
        mkdir -p "${HOME}/golang/${ver}"
        curl -sSL "https://go.dev/dl/${fn}" | tar zxvf - -C "${HOME}/golang/${ver}" --strip-components 1
        ln -sfT "${HOME}/golang/${ver}/bin/go" "${HOME}/bin/go"

        unset -f go
        go "$@"
    )
}
