#!/usr/bin/zsh -f

# [experimental] Separated project environment
#
# 1. create a directory '.rmi-work' to hold history and custom settings
# 2. use 'workhere' or 'workin' to switch environment
#
# You may create a 'conf.zsh' file in '.rmi-work' to setup the environment.
#
# If you need to run setup script after lang-settings (S90), write a function named
# 'post_workhere'. See S95_workhere_postsetup.
#
# See lib/*.sh for some *maybe* useful helpers.

if [[ $_RMI_WORK_HERE != "" && -d "${_RMI_WORK_HERE}/.rmi-work" ]]
then
    # set history file
    f="${_RMI_WORK_HERE}/.rmi-work/history"
    if [[ ! -f "$f" ]]
    then
        cp "$HISTFILE" "$f"
    fi
    export HISTFILE="$f"
    unset f

    if [[ ! -f "${_RMI_WORK_HERE}/.rmi-work/.gitignore" ]]
    then
        echo '*' > "${_RMI_WORK_HERE}/.rmi-work/.gitignore"
        echo '!conf.zsh' >> "${_RMI_WORK_HERE}/.rmi-work/.gitignore"
        echo '!.gitignore' >> "${_RMI_WORK_HERE}/.rmi-work/.gitignore"
    fi

    # initialize
    export _RMI_WORK_DIR="${_RMI_WORK_HERE}/.rmi-work"
    if [[ -f "${_RMI_WORK_HERE}/.rmi-work/conf.zsh" ]]
    then
        source "${_RMI_WORK_HERE}/.rmi-work/conf.zsh"
    fi

    function backroot {
        cd "$_RMI_WORK_HERE"
    }

    function reload_workhere {
        unset -f post_workhere > /dev/null 2>&1

        source "${_RMI_WORK_HERE}/.rmi-work/conf.zsh"
        whence -w post_workhere > /dev/null 2>&1
        if [[ $? == 0 ]]
        then
            post_workhere
        fi
    }
else
    function workhere {
        if [[ $1 == '-f' ]]
        then
            mkdir -p .rmi-work
            touch .rmi-work/conf.zsh
        fi

        # search for .rmi-work
        if [[ ! -d .rmi-work ]]
        then
            echo "You have to 'mkdir -p .rmi-work' first!"
            return 1
        fi

        export _RMI_WORK_HERE="$(pwd)"
        unset -f workhere
        unset -f workin
        exec "$SHELL" -l
    }

    function workin {
        dir="$1"
        conf="$1/.rmi-work"
        if [[ ! -d "$conf" ]]
        then
            # also try ~/...
            if [[ ! -d "${HOME}/${conf}" ]]
            then
                echo "You have to 'mkdir -p ${conf}' first!"
                return 1
            else
                dir="${HOME}/${1}"
            fi
        fi

        cd "$dir"
        workhere
    }
fi
